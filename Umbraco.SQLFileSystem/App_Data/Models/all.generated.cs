using  System;
using  System.Collections.Generic;
using  System.Linq.Expressions;
using  System.Web;
using  Umbraco.Core.Models;
using  Umbraco.Core.Models.PublishedContent;
using  Umbraco.Web;
using  Umbraco.ModelsBuilder;
using  Umbraco.ModelsBuilder.Umbraco;
[assembly: PureLiveAssembly, System.Reflection.AssemblyVersion("0.0.0.1")]


// FILE: models.generated.cs

//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.2.93
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------













namespace Umbraco.Web.PublishedContentModels
{
	/// <summary>PortalNode</summary>
	[PublishedContentModel("PortalNode")]
	public partial class PortalNode : PublishedContentModel, INavigation
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "PortalNode";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public PortalNode(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<PortalNode, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Display on front page
		///</summary>
		[ImplementPropertyType("frontPage")]
		public bool FrontPage
		{
			get { return this.GetPropertyValue<bool>("frontPage"); }
		}

		///<summary>
		/// Front page descriotion
		///</summary>
		[ImplementPropertyType("frontPageDescriotion")]
		public string FrontPageDescriotion
		{
			get { return this.GetPropertyValue<string>("frontPageDescriotion"); }
		}

		///<summary>
		/// GlyphIcon
		///</summary>
		[ImplementPropertyType("glyphicon")]
		public string Glyphicon
		{
			get { return this.GetPropertyValue<string>("glyphicon"); }
		}

		///<summary>
		/// NAV Module name
		///</summary>
		[ImplementPropertyType("modulename")]
		public object Modulename
		{
			get { return this.GetPropertyValue("modulename"); }
		}

		///<summary>
		/// Hide in navigation
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Navigation.GetUmbracoNaviHide(this); }
		}
	}

	/// <summary>Prijava</summary>
	[PublishedContentModel("Prijava")]
	public partial class Prijava : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Prijava";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Prijava(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Prijava, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Napaka</summary>
	[PublishedContentModel("Napaka")]
	public partial class Napaka : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Napaka";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Napaka(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Napaka, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>unsecure</summary>
	[PublishedContentModel("Unsecure")]
	public partial class Unsecure : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Unsecure";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Unsecure(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Unsecure, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>secure</summary>
	[PublishedContentModel("Secure")]
	public partial class Secure : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Secure";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Secure(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Secure, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Default secure page
		///</summary>
		[ImplementPropertyType("defaultPage")]
		public object DefaultPage
		{
			get { return this.GetPropertyValue("defaultPage"); }
		}
	}

	/// <summary>PortalNodeGroup</summary>
	[PublishedContentModel("Portalnodegroup")]
	public partial class Portalnodegroup : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Portalnodegroup";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Portalnodegroup(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Portalnodegroup, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	// Mixin content Type 1112 with alias "Navigation"
	/// <summary>Navigation</summary>
	public partial interface INavigation : IPublishedContent
	{
		/// <summary>Hide in navigation</summary>
		bool UmbracoNaviHide { get; }
	}

	/// <summary>Navigation</summary>
	[PublishedContentModel("Navigation")]
	public partial class Navigation : PublishedContentModel, INavigation
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Navigation";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Navigation(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Navigation, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Hide in navigation
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return GetUmbracoNaviHide(this); }
		}

		/// <summary>Static getter for Hide in navigation</summary>
		public static bool GetUmbracoNaviHide(INavigation that) { return that.GetPropertyValue<bool>("umbracoNaviHide"); }
	}

	/// <summary>Change password document type</summary>
	[PublishedContentModel("changePassword")]
	public partial class ChangePassword : PublishedContentModel, INavigation
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "changePassword";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ChangePassword(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ChangePassword, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Hide in navigation
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Navigation.GetUmbracoNaviHide(this); }
		}
	}

	/// <summary>Solution Page</summary>
	[PublishedContentModel("solutionPage")]
	public partial class SolutionPage : PublishedContentModel, ISEoproperties, ISharedProperties
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "solutionPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SolutionPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SolutionPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Display in navigation
		///</summary>
		[ImplementPropertyType("displayInNavigation")]
		public bool DisplayInNavigation
		{
			get { return SEoproperties.GetDisplayInNavigation(this); }
		}

		///<summary>
		/// displayInSiteMap
		///</summary>
		[ImplementPropertyType("displayInSiteMap")]
		public bool DisplayInSiteMap
		{
			get { return SEoproperties.GetDisplayInSiteMap(this); }
		}

		///<summary>
		/// Page description
		///</summary>
		[ImplementPropertyType("pageDescription")]
		public string PageDescription
		{
			get { return SEoproperties.GetPageDescription(this); }
		}

		///<summary>
		/// Predecessor: Predecessor for this page (optional)
		///</summary>
		[ImplementPropertyType("predecessor")]
		public object Predecessor
		{
			get { return SharedProperties.GetPredecessor(this); }
		}

		///<summary>
		/// Related pages: Related pages
		///</summary>
		[ImplementPropertyType("relatedPages")]
		public string RelatedPages
		{
			get { return SharedProperties.GetRelatedPages(this); }
		}

		///<summary>
		/// Successor: Successor page (optional)
		///</summary>
		[ImplementPropertyType("successor")]
		public object Successor
		{
			get { return SharedProperties.GetSuccessor(this); }
		}
	}

	/// <summary>Solution Landing Page</summary>
	[PublishedContentModel("solutionLandingPage")]
	public partial class SolutionLandingPage : PublishedContentModel, IBenefits, IBigProductsForBigSolutions, IHeroBanner, IPromotedFeatures, ISEoproperties, ISharedProperties, ISuccessStoriesSelector
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "solutionLandingPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SolutionLandingPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SolutionLandingPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Products list
		///</summary>
		[ImplementPropertyType("productsList")]
		public Newtonsoft.Json.Linq.JToken ProductsList
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JToken>("productsList"); }
		}

		///<summary>
		/// Benefits list
		///</summary>
		[ImplementPropertyType("benefitsList")]
		public object BenefitsList
		{
			get { return Benefits.GetBenefitsList(this); }
		}

		///<summary>
		/// BenefitsMainTitle
		///</summary>
		[ImplementPropertyType("benefitsMainTitle")]
		public string BenefitsMainTitle
		{
			get { return Benefits.GetBenefitsMainTitle(this); }
		}

		///<summary>
		/// BPFBS content
		///</summary>
		[ImplementPropertyType("bPFBSContent")]
		public object BPfbscontent
		{
			get { return BigProductsForBigSolutions.GetBPfbscontent(this); }
		}

		///<summary>
		/// BPFBS page description
		///</summary>
		[ImplementPropertyType("bPFBSPageDescription")]
		public string BPfbspageDescription
		{
			get { return BigProductsForBigSolutions.GetBPfbspageDescription(this); }
		}

		///<summary>
		/// BPFBS page tittle
		///</summary>
		[ImplementPropertyType("bPFBSPageTittle")]
		public string BPfbspageTittle
		{
			get { return BigProductsForBigSolutions.GetBPfbspageTittle(this); }
		}

		///<summary>
		/// Banner Image
		///</summary>
		[ImplementPropertyType("bannerImage")]
		public object BannerImage
		{
			get { return HeroBanner.GetBannerImage(this); }
		}

		///<summary>
		/// Hero Style Sheet: Style sheet located in ~/css/, provide just the name withowt .css
		///</summary>
		[ImplementPropertyType("heroStyleSheet")]
		public string HeroStyleSheet
		{
			get { return HeroBanner.GetHeroStyleSheet(this); }
		}

		///<summary>
		/// String 1
		///</summary>
		[ImplementPropertyType("string1")]
		public string String1
		{
			get { return HeroBanner.GetString1(this); }
		}

		///<summary>
		/// String 2
		///</summary>
		[ImplementPropertyType("string2")]
		public string String2
		{
			get { return HeroBanner.GetString2(this); }
		}

		///<summary>
		/// String 3
		///</summary>
		[ImplementPropertyType("string3")]
		public string String3
		{
			get { return HeroBanner.GetString3(this); }
		}

		///<summary>
		/// String Rte1
		///</summary>
		[ImplementPropertyType("stringRte1")]
		public IHtmlString StringRte1
		{
			get { return HeroBanner.GetStringRte1(this); }
		}

		///<summary>
		/// Template Type: templates for hero modules are located in ~/Views/Partials/Hero/, type in without the extension.
		///</summary>
		[ImplementPropertyType("templateType")]
		public string TemplateType
		{
			get { return HeroBanner.GetTemplateType(this); }
		}

		///<summary>
		/// features
		///</summary>
		[ImplementPropertyType("features")]
		public Newtonsoft.Json.Linq.JToken Features
		{
			get { return PromotedFeatures.GetFeatures(this); }
		}

		///<summary>
		/// Display in navigation
		///</summary>
		[ImplementPropertyType("displayInNavigation")]
		public bool DisplayInNavigation
		{
			get { return SEoproperties.GetDisplayInNavigation(this); }
		}

		///<summary>
		/// displayInSiteMap
		///</summary>
		[ImplementPropertyType("displayInSiteMap")]
		public bool DisplayInSiteMap
		{
			get { return SEoproperties.GetDisplayInSiteMap(this); }
		}

		///<summary>
		/// Page description
		///</summary>
		[ImplementPropertyType("pageDescription")]
		public string PageDescription
		{
			get { return SEoproperties.GetPageDescription(this); }
		}

		///<summary>
		/// Predecessor: Predecessor for this page (optional)
		///</summary>
		[ImplementPropertyType("predecessor")]
		public object Predecessor
		{
			get { return SharedProperties.GetPredecessor(this); }
		}

		///<summary>
		/// Related pages: Related pages
		///</summary>
		[ImplementPropertyType("relatedPages")]
		public string RelatedPages
		{
			get { return SharedProperties.GetRelatedPages(this); }
		}

		///<summary>
		/// Successor: Successor page (optional)
		///</summary>
		[ImplementPropertyType("successor")]
		public object Successor
		{
			get { return SharedProperties.GetSuccessor(this); }
		}

		///<summary>
		/// Success Stories
		///</summary>
		[ImplementPropertyType("successStories")]
		public string SuccessStories
		{
			get { return SuccessStoriesSelector.GetSuccessStories(this); }
		}

		///<summary>
		/// Success Stories Title
		///</summary>
		[ImplementPropertyType("successStoriesTitle")]
		public string SuccessStoriesTitle
		{
			get { return SuccessStoriesSelector.GetSuccessStoriesTitle(this); }
		}
	}

	/// <summary>Site Root</summary>
	[PublishedContentModel("siteRoot")]
	public partial class SiteRoot : PublishedContentModel, ISEoproperties, ISharedProperties, ISiteFooter
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "siteRoot";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SiteRoot(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SiteRoot, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// About company page
		///</summary>
		[ImplementPropertyType("abountCompany")]
		public object AbountCompany
		{
			get { return this.GetPropertyValue("abountCompany"); }
		}

		///<summary>
		/// contact Page
		///</summary>
		[ImplementPropertyType("contactPage")]
		public object ContactPage
		{
			get { return this.GetPropertyValue("contactPage"); }
		}

		///<summary>
		/// Default page
		///</summary>
		[ImplementPropertyType("defaultPage")]
		public object DefaultPage
		{
			get { return this.GetPropertyValue("defaultPage"); }
		}

		///<summary>
		/// Display in navigation
		///</summary>
		[ImplementPropertyType("displayInNavigation")]
		public bool DisplayInNavigation
		{
			get { return SEoproperties.GetDisplayInNavigation(this); }
		}

		///<summary>
		/// displayInSiteMap
		///</summary>
		[ImplementPropertyType("displayInSiteMap")]
		public bool DisplayInSiteMap
		{
			get { return SEoproperties.GetDisplayInSiteMap(this); }
		}

		///<summary>
		/// Page description
		///</summary>
		[ImplementPropertyType("pageDescription")]
		public string PageDescription
		{
			get { return SEoproperties.GetPageDescription(this); }
		}

		///<summary>
		/// Predecessor: Predecessor for this page (optional)
		///</summary>
		[ImplementPropertyType("predecessor")]
		public object Predecessor
		{
			get { return SharedProperties.GetPredecessor(this); }
		}

		///<summary>
		/// Related pages: Related pages
		///</summary>
		[ImplementPropertyType("relatedPages")]
		public string RelatedPages
		{
			get { return SharedProperties.GetRelatedPages(this); }
		}

		///<summary>
		/// Successor: Successor page (optional)
		///</summary>
		[ImplementPropertyType("successor")]
		public object Successor
		{
			get { return SharedProperties.GetSuccessor(this); }
		}

		///<summary>
		/// Footer col 1
		///</summary>
		[ImplementPropertyType("footerCol1")]
		public string FooterCol1
		{
			get { return SiteFooter.GetFooterCol1(this); }
		}

		///<summary>
		/// Footer col 2
		///</summary>
		[ImplementPropertyType("footerCol2")]
		public string FooterCol2
		{
			get { return SiteFooter.GetFooterCol2(this); }
		}

		///<summary>
		/// Footer col 3
		///</summary>
		[ImplementPropertyType("footerCol3")]
		public string FooterCol3
		{
			get { return SiteFooter.GetFooterCol3(this); }
		}

		///<summary>
		/// Footer col 4
		///</summary>
		[ImplementPropertyType("footerCol4")]
		public string FooterCol4
		{
			get { return SiteFooter.GetFooterCol4(this); }
		}
	}

	// Mixin content Type 1165 with alias "sharedProperties"
	/// <summary>Shared properties</summary>
	public partial interface ISharedProperties : IPublishedContent
	{
		/// <summary>Predecessor</summary>
		object Predecessor { get; }

		/// <summary>Related pages</summary>
		string RelatedPages { get; }

		/// <summary>Successor</summary>
		object Successor { get; }
	}

	/// <summary>Shared properties</summary>
	[PublishedContentModel("sharedProperties")]
	public partial class SharedProperties : PublishedContentModel, ISharedProperties
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "sharedProperties";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SharedProperties(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SharedProperties, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Predecessor: Predecessor for this page (optional)
		///</summary>
		[ImplementPropertyType("predecessor")]
		public object Predecessor
		{
			get { return GetPredecessor(this); }
		}

		/// <summary>Static getter for Predecessor</summary>
		public static object GetPredecessor(ISharedProperties that) { return that.GetPropertyValue("predecessor"); }

		///<summary>
		/// Related pages: Related pages
		///</summary>
		[ImplementPropertyType("relatedPages")]
		public string RelatedPages
		{
			get { return GetRelatedPages(this); }
		}

		/// <summary>Static getter for Related pages</summary>
		public static string GetRelatedPages(ISharedProperties that) { return that.GetPropertyValue<string>("relatedPages"); }

		///<summary>
		/// Successor: Successor page (optional)
		///</summary>
		[ImplementPropertyType("successor")]
		public object Successor
		{
			get { return GetSuccessor(this); }
		}

		/// <summary>Static getter for Successor</summary>
		public static object GetSuccessor(ISharedProperties that) { return that.GetPropertyValue("successor"); }
	}

	// Mixin content Type 1166 with alias "sEOProperties"
	/// <summary>SEO Properties</summary>
	public partial interface ISEoproperties : IPublishedContent
	{
		/// <summary>Display in navigation</summary>
		bool DisplayInNavigation { get; }

		/// <summary>displayInSiteMap</summary>
		bool DisplayInSiteMap { get; }

		/// <summary>Page description</summary>
		string PageDescription { get; }
	}

	/// <summary>SEO Properties</summary>
	[PublishedContentModel("sEOProperties")]
	public partial class SEoproperties : PublishedContentModel, ISEoproperties
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "sEOProperties";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SEoproperties(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SEoproperties, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Display in navigation
		///</summary>
		[ImplementPropertyType("displayInNavigation")]
		public bool DisplayInNavigation
		{
			get { return GetDisplayInNavigation(this); }
		}

		/// <summary>Static getter for Display in navigation</summary>
		public static bool GetDisplayInNavigation(ISEoproperties that) { return that.GetPropertyValue<bool>("displayInNavigation"); }

		///<summary>
		/// displayInSiteMap
		///</summary>
		[ImplementPropertyType("displayInSiteMap")]
		public bool DisplayInSiteMap
		{
			get { return GetDisplayInSiteMap(this); }
		}

		/// <summary>Static getter for displayInSiteMap</summary>
		public static bool GetDisplayInSiteMap(ISEoproperties that) { return that.GetPropertyValue<bool>("displayInSiteMap"); }

		///<summary>
		/// Page description
		///</summary>
		[ImplementPropertyType("pageDescription")]
		public string PageDescription
		{
			get { return GetPageDescription(this); }
		}

		/// <summary>Static getter for Page description</summary>
		public static string GetPageDescription(ISEoproperties that) { return that.GetPropertyValue<string>("pageDescription"); }
	}

	/// <summary>Contact Page</summary>
	[PublishedContentModel("contactPage")]
	public partial class ContactPage : PublishedContentModel, IHeroBanner
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "contactPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ContactPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ContactPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Banner Image
		///</summary>
		[ImplementPropertyType("bannerImage")]
		public object BannerImage
		{
			get { return HeroBanner.GetBannerImage(this); }
		}

		///<summary>
		/// Hero Style Sheet: Style sheet located in ~/css/, provide just the name withowt .css
		///</summary>
		[ImplementPropertyType("heroStyleSheet")]
		public string HeroStyleSheet
		{
			get { return HeroBanner.GetHeroStyleSheet(this); }
		}

		///<summary>
		/// String 1
		///</summary>
		[ImplementPropertyType("string1")]
		public string String1
		{
			get { return HeroBanner.GetString1(this); }
		}

		///<summary>
		/// String 2
		///</summary>
		[ImplementPropertyType("string2")]
		public string String2
		{
			get { return HeroBanner.GetString2(this); }
		}

		///<summary>
		/// String 3
		///</summary>
		[ImplementPropertyType("string3")]
		public string String3
		{
			get { return HeroBanner.GetString3(this); }
		}

		///<summary>
		/// String Rte1
		///</summary>
		[ImplementPropertyType("stringRte1")]
		public IHtmlString StringRte1
		{
			get { return HeroBanner.GetStringRte1(this); }
		}

		///<summary>
		/// Template Type: templates for hero modules are located in ~/Views/Partials/Hero/, type in without the extension.
		///</summary>
		[ImplementPropertyType("templateType")]
		public string TemplateType
		{
			get { return HeroBanner.GetTemplateType(this); }
		}
	}

	/// <summary>UMB Properties</summary>
	[PublishedContentModel("uMBProperties")]
	public partial class UMbproperties : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "uMBProperties";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UMbproperties(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UMbproperties, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Case studies</summary>
	[PublishedContentModel("caseStudies")]
	public partial class CaseStudies : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "caseStudies";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CaseStudies(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CaseStudies, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Case study</summary>
	[PublishedContentModel("caseStudy")]
	public partial class CaseStudy : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "caseStudy";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CaseStudy(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CaseStudy, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Company
		///</summary>
		[ImplementPropertyType("company")]
		public string Company
		{
			get { return this.GetPropertyValue<string>("company"); }
		}

		///<summary>
		/// Company URL
		///</summary>
		[ImplementPropertyType("companyURL")]
		public string CompanyUrl
		{
			get { return this.GetPropertyValue<string>("companyURL"); }
		}

		///<summary>
		/// Implementation Date
		///</summary>
		[ImplementPropertyType("implementationDate")]
		public DateTime ImplementationDate
		{
			get { return this.GetPropertyValue<DateTime>("implementationDate"); }
		}

		///<summary>
		/// responsable Person
		///</summary>
		[ImplementPropertyType("responsablePerson")]
		public string ResponsablePerson
		{
			get { return this.GetPropertyValue<string>("responsablePerson"); }
		}

		///<summary>
		/// Statment
		///</summary>
		[ImplementPropertyType("statment")]
		public string Statment
		{
			get { return this.GetPropertyValue<string>("statment"); }
		}

		///<summary>
		/// Used technologies
		///</summary>
		[ImplementPropertyType("usedTechnologies")]
		public string UsedTechnologies
		{
			get { return this.GetPropertyValue<string>("usedTechnologies"); }
		}
	}

	// Mixin content Type 1182 with alias "siteFooter"
	/// <summary>Site Footer</summary>
	public partial interface ISiteFooter : IPublishedContent
	{
		/// <summary>Footer col 1</summary>
		string FooterCol1 { get; }

		/// <summary>Footer col 2</summary>
		string FooterCol2 { get; }

		/// <summary>Footer col 3</summary>
		string FooterCol3 { get; }

		/// <summary>Footer col 4</summary>
		string FooterCol4 { get; }
	}

	/// <summary>Site Footer</summary>
	[PublishedContentModel("siteFooter")]
	public partial class SiteFooter : PublishedContentModel, ISiteFooter
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "siteFooter";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SiteFooter(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SiteFooter, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Footer col 1
		///</summary>
		[ImplementPropertyType("footerCol1")]
		public string FooterCol1
		{
			get { return GetFooterCol1(this); }
		}

		/// <summary>Static getter for Footer col 1</summary>
		public static string GetFooterCol1(ISiteFooter that) { return that.GetPropertyValue<string>("footerCol1"); }

		///<summary>
		/// Footer col 2
		///</summary>
		[ImplementPropertyType("footerCol2")]
		public string FooterCol2
		{
			get { return GetFooterCol2(this); }
		}

		/// <summary>Static getter for Footer col 2</summary>
		public static string GetFooterCol2(ISiteFooter that) { return that.GetPropertyValue<string>("footerCol2"); }

		///<summary>
		/// Footer col 3
		///</summary>
		[ImplementPropertyType("footerCol3")]
		public string FooterCol3
		{
			get { return GetFooterCol3(this); }
		}

		/// <summary>Static getter for Footer col 3</summary>
		public static string GetFooterCol3(ISiteFooter that) { return that.GetPropertyValue<string>("footerCol3"); }

		///<summary>
		/// Footer col 4
		///</summary>
		[ImplementPropertyType("footerCol4")]
		public string FooterCol4
		{
			get { return GetFooterCol4(this); }
		}

		/// <summary>Static getter for Footer col 4</summary>
		public static string GetFooterCol4(ISiteFooter that) { return that.GetPropertyValue<string>("footerCol4"); }
	}

	// Mixin content Type 1184 with alias "promotedFeatures"
	/// <summary>Promoted features</summary>
	public partial interface IPromotedFeatures : IPublishedContent
	{
		/// <summary>features</summary>
		Newtonsoft.Json.Linq.JToken Features { get; }
	}

	/// <summary>Promoted features</summary>
	[PublishedContentModel("promotedFeatures")]
	public partial class PromotedFeatures : PublishedContentModel, IPromotedFeatures
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "promotedFeatures";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public PromotedFeatures(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<PromotedFeatures, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// features
		///</summary>
		[ImplementPropertyType("features")]
		public Newtonsoft.Json.Linq.JToken Features
		{
			get { return GetFeatures(this); }
		}

		/// <summary>Static getter for features</summary>
		public static Newtonsoft.Json.Linq.JToken GetFeatures(IPromotedFeatures that) { return that.GetPropertyValue<Newtonsoft.Json.Linq.JToken>("features"); }
	}

	/// <summary>Product feature</summary>
	[PublishedContentModel("productFeature")]
	public partial class ProductFeature : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "productFeature";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ProductFeature(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ProductFeature, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	// Mixin content Type 1195 with alias "successStoriesSelector"
	/// <summary>Success stories selector</summary>
	public partial interface ISuccessStoriesSelector : IPublishedContent
	{
		/// <summary>Success Stories</summary>
		string SuccessStories { get; }

		/// <summary>Success Stories Title</summary>
		string SuccessStoriesTitle { get; }
	}

	/// <summary>Success stories selector</summary>
	[PublishedContentModel("successStoriesSelector")]
	public partial class SuccessStoriesSelector : PublishedContentModel, ISuccessStoriesSelector
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "successStoriesSelector";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SuccessStoriesSelector(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SuccessStoriesSelector, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Success Stories
		///</summary>
		[ImplementPropertyType("successStories")]
		public string SuccessStories
		{
			get { return GetSuccessStories(this); }
		}

		/// <summary>Static getter for Success Stories</summary>
		public static string GetSuccessStories(ISuccessStoriesSelector that) { return that.GetPropertyValue<string>("successStories"); }

		///<summary>
		/// Success Stories Title
		///</summary>
		[ImplementPropertyType("successStoriesTitle")]
		public string SuccessStoriesTitle
		{
			get { return GetSuccessStoriesTitle(this); }
		}

		/// <summary>Static getter for Success Stories Title</summary>
		public static string GetSuccessStoriesTitle(ISuccessStoriesSelector that) { return that.GetPropertyValue<string>("successStoriesTitle"); }
	}

	// Mixin content Type 1200 with alias "heroBanner"
	/// <summary>Hero banner</summary>
	public partial interface IHeroBanner : IPublishedContent
	{
		/// <summary>Banner Image</summary>
		object BannerImage { get; }

		/// <summary>Hero Style Sheet</summary>
		string HeroStyleSheet { get; }

		/// <summary>String 1</summary>
		string String1 { get; }

		/// <summary>String 2</summary>
		string String2 { get; }

		/// <summary>String 3</summary>
		string String3 { get; }

		/// <summary>String Rte1</summary>
		IHtmlString StringRte1 { get; }

		/// <summary>Template Type</summary>
		string TemplateType { get; }
	}

	/// <summary>Hero banner</summary>
	[PublishedContentModel("heroBanner")]
	public partial class HeroBanner : PublishedContentModel, IHeroBanner
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "heroBanner";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public HeroBanner(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<HeroBanner, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Banner Image
		///</summary>
		[ImplementPropertyType("bannerImage")]
		public object BannerImage
		{
			get { return GetBannerImage(this); }
		}

		/// <summary>Static getter for Banner Image</summary>
		public static object GetBannerImage(IHeroBanner that) { return that.GetPropertyValue("bannerImage"); }

		///<summary>
		/// Hero Style Sheet: Style sheet located in ~/css/, provide just the name withowt .css
		///</summary>
		[ImplementPropertyType("heroStyleSheet")]
		public string HeroStyleSheet
		{
			get { return GetHeroStyleSheet(this); }
		}

		/// <summary>Static getter for Hero Style Sheet</summary>
		public static string GetHeroStyleSheet(IHeroBanner that) { return that.GetPropertyValue<string>("heroStyleSheet"); }

		///<summary>
		/// String 1
		///</summary>
		[ImplementPropertyType("string1")]
		public string String1
		{
			get { return GetString1(this); }
		}

		/// <summary>Static getter for String 1</summary>
		public static string GetString1(IHeroBanner that) { return that.GetPropertyValue<string>("string1"); }

		///<summary>
		/// String 2
		///</summary>
		[ImplementPropertyType("string2")]
		public string String2
		{
			get { return GetString2(this); }
		}

		/// <summary>Static getter for String 2</summary>
		public static string GetString2(IHeroBanner that) { return that.GetPropertyValue<string>("string2"); }

		///<summary>
		/// String 3
		///</summary>
		[ImplementPropertyType("string3")]
		public string String3
		{
			get { return GetString3(this); }
		}

		/// <summary>Static getter for String 3</summary>
		public static string GetString3(IHeroBanner that) { return that.GetPropertyValue<string>("string3"); }

		///<summary>
		/// String Rte1
		///</summary>
		[ImplementPropertyType("stringRte1")]
		public IHtmlString StringRte1
		{
			get { return GetStringRte1(this); }
		}

		/// <summary>Static getter for String Rte1</summary>
		public static IHtmlString GetStringRte1(IHeroBanner that) { return that.GetPropertyValue<IHtmlString>("stringRte1"); }

		///<summary>
		/// Template Type: templates for hero modules are located in ~/Views/Partials/Hero/, type in without the extension.
		///</summary>
		[ImplementPropertyType("templateType")]
		public string TemplateType
		{
			get { return GetTemplateType(this); }
		}

		/// <summary>Static getter for Template Type</summary>
		public static string GetTemplateType(IHeroBanner that) { return that.GetPropertyValue<string>("templateType"); }
	}

	// Mixin content Type 1237 with alias "bigProductsForBigSolutions"
	/// <summary>Big products for big solutions</summary>
	public partial interface IBigProductsForBigSolutions : IPublishedContent
	{
		/// <summary>BPFBS content</summary>
		object BPfbscontent { get; }

		/// <summary>BPFBS page description</summary>
		string BPfbspageDescription { get; }

		/// <summary>BPFBS page tittle</summary>
		string BPfbspageTittle { get; }
	}

	/// <summary>Big products for big solutions</summary>
	[PublishedContentModel("bigProductsForBigSolutions")]
	public partial class BigProductsForBigSolutions : PublishedContentModel, IBigProductsForBigSolutions
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "bigProductsForBigSolutions";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public BigProductsForBigSolutions(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<BigProductsForBigSolutions, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// BPFBS content
		///</summary>
		[ImplementPropertyType("bPFBSContent")]
		public object BPfbscontent
		{
			get { return GetBPfbscontent(this); }
		}

		/// <summary>Static getter for BPFBS content</summary>
		public static object GetBPfbscontent(IBigProductsForBigSolutions that) { return that.GetPropertyValue("bPFBSContent"); }

		///<summary>
		/// BPFBS page description
		///</summary>
		[ImplementPropertyType("bPFBSPageDescription")]
		public string BPfbspageDescription
		{
			get { return GetBPfbspageDescription(this); }
		}

		/// <summary>Static getter for BPFBS page description</summary>
		public static string GetBPfbspageDescription(IBigProductsForBigSolutions that) { return that.GetPropertyValue<string>("bPFBSPageDescription"); }

		///<summary>
		/// BPFBS page tittle
		///</summary>
		[ImplementPropertyType("bPFBSPageTittle")]
		public string BPfbspageTittle
		{
			get { return GetBPfbspageTittle(this); }
		}

		/// <summary>Static getter for BPFBS page tittle</summary>
		public static string GetBPfbspageTittle(IBigProductsForBigSolutions that) { return that.GetPropertyValue<string>("bPFBSPageTittle"); }
	}

	// Mixin content Type 1273 with alias "benefits"
	/// <summary>Benefits</summary>
	public partial interface IBenefits : IPublishedContent
	{
		/// <summary>Benefits list</summary>
		object BenefitsList { get; }

		/// <summary>BenefitsMainTitle</summary>
		string BenefitsMainTitle { get; }
	}

	/// <summary>Benefits</summary>
	[PublishedContentModel("benefits")]
	public partial class Benefits : PublishedContentModel, IBenefits
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "benefits";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Benefits(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Benefits, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Benefits list
		///</summary>
		[ImplementPropertyType("benefitsList")]
		public object BenefitsList
		{
			get { return GetBenefitsList(this); }
		}

		/// <summary>Static getter for Benefits list</summary>
		public static object GetBenefitsList(IBenefits that) { return that.GetPropertyValue("benefitsList"); }

		///<summary>
		/// BenefitsMainTitle
		///</summary>
		[ImplementPropertyType("benefitsMainTitle")]
		public string BenefitsMainTitle
		{
			get { return GetBenefitsMainTitle(this); }
		}

		/// <summary>Static getter for BenefitsMainTitle</summary>
		public static string GetBenefitsMainTitle(IBenefits that) { return that.GetPropertyValue<string>("benefitsMainTitle"); }
	}

	/// <summary>Dynamics Nav demo page</summary>
	[PublishedContentModel("dynamicsNavDemoPage")]
	public partial class DynamicsNavDemoPage : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "dynamicsNavDemoPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public DynamicsNavDemoPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<DynamicsNavDemoPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// DemopageImage
		///</summary>
		[ImplementPropertyType("demopageImage")]
		public object DemopageImage
		{
			get { return this.GetPropertyValue("demopageImage"); }
		}

		///<summary>
		/// NavPageDesc
		///</summary>
		[ImplementPropertyType("navPageDesc")]
		public string NavPageDesc
		{
			get { return this.GetPropertyValue<string>("navPageDesc"); }
		}

		///<summary>
		/// NavpageSubtitle
		///</summary>
		[ImplementPropertyType("navpageSubtitle")]
		public string NavpageSubtitle
		{
			get { return this.GetPropertyValue<string>("navpageSubtitle"); }
		}

		///<summary>
		/// NaVpageTittle
		///</summary>
		[ImplementPropertyType("naVpageTittle")]
		public string NaVpageTittle
		{
			get { return this.GetPropertyValue<string>("naVpageTittle"); }
		}

		///<summary>
		/// pageTag
		///</summary>
		[ImplementPropertyType("pagetag")]
		public object Pagetag
		{
			get { return this.GetPropertyValue("pagetag"); }
		}
	}

	/// <summary>Demopagefolder</summary>
	[PublishedContentModel("demopagefolder")]
	public partial class Demopagefolder : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "demopagefolder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Demopagefolder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Demopagefolder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Folder</summary>
	[PublishedContentModel("Folder")]
	public partial class Folder : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Folder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Folder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Folder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Contents:
		///</summary>
		[ImplementPropertyType("contents")]
		public object Contents
		{
			get { return this.GetPropertyValue("contents"); }
		}
	}

	/// <summary>Image</summary>
	[PublishedContentModel("Image")]
	public partial class Image : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Image";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Image(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Image, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload image
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public object UmbracoFile
		{
			get { return this.GetPropertyValue("umbracoFile"); }
		}

		///<summary>
		/// Height
		///</summary>
		[ImplementPropertyType("umbracoHeight")]
		public string UmbracoHeight
		{
			get { return this.GetPropertyValue<string>("umbracoHeight"); }
		}

		///<summary>
		/// Width
		///</summary>
		[ImplementPropertyType("umbracoWidth")]
		public string UmbracoWidth
		{
			get { return this.GetPropertyValue<string>("umbracoWidth"); }
		}
	}

	/// <summary>File</summary>
	[PublishedContentModel("File")]
	public partial class File : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "File";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public File(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<File, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload file
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public object UmbracoFile
		{
			get { return this.GetPropertyValue("umbracoFile"); }
		}
	}

	/// <summary>Member</summary>
	[PublishedContentModel("Member")]
	public partial class Member : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Member";
		public new const PublishedItemType ModelItemType = PublishedItemType.Member;
#pragma warning restore 0109

		public Member(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Member, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Is Approved
		///</summary>
		[ImplementPropertyType("umbracoMemberApproved")]
		public bool UmbracoMemberApproved
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberApproved"); }
		}

		///<summary>
		/// Comments
		///</summary>
		[ImplementPropertyType("umbracoMemberComments")]
		public string UmbracoMemberComments
		{
			get { return this.GetPropertyValue<string>("umbracoMemberComments"); }
		}

		///<summary>
		/// Failed Password Attempts
		///</summary>
		[ImplementPropertyType("umbracoMemberFailedPasswordAttempts")]
		public string UmbracoMemberFailedPasswordAttempts
		{
			get { return this.GetPropertyValue<string>("umbracoMemberFailedPasswordAttempts"); }
		}

		///<summary>
		/// Last Lockout Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLockoutDate")]
		public string UmbracoMemberLastLockoutDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLockoutDate"); }
		}

		///<summary>
		/// Last Login Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLogin")]
		public string UmbracoMemberLastLogin
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLogin"); }
		}

		///<summary>
		/// Last Password Change Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastPasswordChangeDate")]
		public string UmbracoMemberLastPasswordChangeDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastPasswordChangeDate"); }
		}

		///<summary>
		/// Is Locked Out
		///</summary>
		[ImplementPropertyType("umbracoMemberLockedOut")]
		public bool UmbracoMemberLockedOut
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberLockedOut"); }
		}

		///<summary>
		/// Password Answer
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalAnswer")]
		public string UmbracoMemberPasswordRetrievalAnswer
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalAnswer"); }
		}

		///<summary>
		/// Password Question
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalQuestion")]
		public string UmbracoMemberPasswordRetrievalQuestion
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalQuestion"); }
		}
	}

}



// EOF
